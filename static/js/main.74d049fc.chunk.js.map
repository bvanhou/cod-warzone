{"version":3,"sources":["useCanvas.js","map-overview-bg.jpg","App.js","reportWebVitals.js","index.js"],"names":["SVG_PATH","Path2D","SCALE","canvasWidth","window","innerWidth","canvasHeight","innerHeight","draw","ctx","location","coordinates","setClickedContract","undefined","type","locationX","x","locationY","y","fillStyle","shadowColor","shadowBlur","save","scale","translate","rotate","Math","PI","fill","canvas","addEventListener","event","mousePoint","clientX","clientY","contract","find","element","point","el","sqrt","restore","useCanvas","canvasRef","useRef","menuRef","useState","setCoordinates","clickedContract","start","setStart","useEffect","current","getContext","menu","_corrdinate","length","style","left","top","drawMenu","clearRect","forEach","coordinate","api","axios","create","baseURL","process","App","currentCoord","setCurrentCoord","setContractCoord","e","preventDefault","get","then","res","_coordinates","data","id","className","src","warzone","alt","ref","width","height","onClick","_currentCoord","parentId","post","console","log","filter","obj","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74d049fc.chunk.js","sourcesContent":["import { useState, useEffect, useRef } from 'react';\n\n// Path2D for a Heart SVG\nconst heartSVG = \"M0 200 v-200 h200 a100,100 90 0,1 0,200 a100,100 90 0,1 -200,0 z\"\nconst SVG_PATH = new Path2D(heartSVG);\n\n// Scaling Constants for Canvas\nconst SCALE = 0.05;\nconst OFFSET = 80;\nexport const canvasWidth = window.innerWidth;\nexport const canvasHeight = window.innerHeight;\n\nfunction isIntersect(point, el) {\n    return Math.sqrt((point.x-el.x) ** 2 + (point.y - el.y) ** 2) < 10;\n}\n\nexport function draw(ctx, location, coordinates, setClickedContract){\n    if(location.type !== undefined){\n        let locationX = (canvasWidth * location.x) / 100;\n        let locationY = (canvasHeight * location.y) / 100;\n        ctx.fillStyle = location.type === 'contract' ? 'red': 'blue';\n        ctx.shadowColor = 'blue';\n        ctx.shadowBlur = 15;\n        ctx.save();\n        ctx.scale(SCALE, SCALE);\n        ctx.translate(locationX / SCALE - OFFSET, locationY / SCALE - OFFSET);\n        ctx.rotate(225 * Math.PI / 180);\n        ctx.fill(SVG_PATH);\n\n        ctx.canvas.addEventListener('click',(event)=> {\n            let x = 100 / (canvasWidth / event.clientX);\n            let y = 100 / (canvasHeight / event.clientY);\n            const mousePoint = { x, y};\n            // let _currentCoord  = { x: screenPercentX, y: screenPercentY };\n\n            // let clickedContract = coordinates.reduce((a, b) => {\n            //     return (\n            //         Math.abs(b.x - _currentCoord.x) < Math.abs(a.x - _currentCoord.x) \n            //         &&\n            //         Math.abs(b.y - _currentCoord.y) < Math.abs(a.y - _currentCoord.y) \n            //     ) ? b : a;\n            // })\n            // console.log(clickedContract)\n            let contract = coordinates.find((element) => {\n                return element.type && isIntersect(mousePoint, element)\n            });\n            if(contract) setClickedContract(contract)\n        });\n        // .restore(): Canvas 2D API restores the most recently saved canvas state\n        ctx.restore();  \n    }\n};\n\nexport const drawMenu = (menu, location) =>{\n    if(location){\n        let locationX = (canvasWidth * location.x) / 100;\n        let locationY = (canvasHeight * location.y) / 100;\n        menu.style.left = `${locationX}px`;\n        menu.style.top = `${locationY}px`;\n    }\n}\n\nexport function useCanvas(){\n    const canvasRef = useRef(null);\n    const menuRef = useRef(null);\n\n    const [coordinates, setCoordinates] = useState([]);\n    const [clickedContract, setClickedContract] = useState({});\n\n    const [start, setStart] = useState(false);\n\n    useEffect(()=>{\n        const canvasObj = canvasRef.current;\n        const ctx = canvasObj.getContext('2d');\n        const menu = menuRef.current;\n        const _corrdinate = coordinates.length-1;\n        // Draw Context Menu \n        if(!start && _corrdinate.type === undefined)    \n            drawMenu(menu, coordinates[coordinates.length-1]);\n        // clear the canvas area before rendering the coordinates held in state\n        ctx.clearRect( 0,0, canvasWidth, canvasHeight );\n        // draw all coordinates held in state\n        coordinates.forEach((coordinate)=>{\n            draw(ctx, coordinate, coordinates, setClickedContract)\n        });\n\n\n    });\n\n\n    return [ menuRef, coordinates, setCoordinates, canvasRef, canvasWidth, canvasHeight, setStart, clickedContract, setClickedContract ];\n}\n","export default __webpack_public_path__ + \"static/media/map-overview-bg.ccfc7476.jpg\";","import { useEffect, useState } from 'react';\nimport { useCanvas } from './useCanvas';\nimport axios from 'axios';\n\nimport warzone from './map-overview-bg.jpg';\nimport './App.css';\n\nconst { REACT_APP_API_URL } = process.env;\n\nconst api = axios.create({\n  baseURL: REACT_APP_API_URL,\n});\n\n\nfunction App() {\n  const [ menuRef, coordinates, setCoordinates, canvasRef, canvasWidth, canvasHeight, setStart, clickedContract ] = useCanvas();\n  const [ currentCoord, setCurrentCoord ] = useState({})\n  const [ contractCoord, setContractCoord ] = useState({})\n\n  window.addEventListener('contextmenu', function (e) { \n    e.preventDefault(); \n  }, false);\n  \n  const handleCanvasClick=(event)=>{\n    setStart(false)\n    let screenPercentX = 100 / (canvasWidth / event.clientX);\n    let screenPercentY = 100 / (canvasHeight / event.clientY);\n    let _currentCoord  = { x: screenPercentX, y: screenPercentY };\n    setCurrentCoord(_currentCoord);\n    setCoordinates([...coordinates, _currentCoord]);\n  };\n  const handleClearCanvas=(event)=>{\n    setCoordinates([]);\n  };\n\n  const doAddContract = (event) =>{\n    let screenPercentX = 100 / (canvasWidth / event.clientX);\n    let screenPercentY = 100 / (canvasHeight / event.clientY);\n    let _currentCoord  = { parentId: null, x: screenPercentX, y: screenPercentY, type: 'contract' };\n    // add the newest mouse location to an array in state \n    api.post(\"\",{ ..._currentCoord })\n    .then(res => {\n      setContractCoord(res.data)\n      setCoordinates([...coordinates, res.data]);\n    })\n\n  }\n  const doAddRecon = () =>{\n    const { x, y } = currentCoord;\n    const _currentCoord = { parentId: clickedContract.id,  x, y, type: 'recon' };\n\n    const canvasObj = canvasRef.current;\n    const ctx = canvasObj.getContext('2d');\n\n    ctx.canvas.addEventListener('mousemove', e => {\n      console.log('moving')\n    })\n    \n    console.log(_currentCoord)\n    // setCoordinates([...coordinates, _currentCoord]);\n  }\n  const doRemove = () =>{\n    const _coordinates = coordinates.filter((obj) => {\n      return obj.x !== currentCoord.x && obj.y !== currentCoord.y\n    })\n    setCoordinates([..._coordinates]);\n  }\n\n  useEffect(() =>{\n    api.get()\n      .then(res => {\n        const _coordinates = res.data;\n        setStart(true)\n        setCoordinates(_coordinates);\n      })\n  },[setCoordinates, setStart])\n \n  return (\n    <main id=\"container\" className=\"App-main\" >\n      <img  src={warzone} className=\"img-warzone\" alt=\"logo\" />\n  \n      <canvas \n        className=\"App-canvas\"\n        ref={canvasRef}\n        width={canvasWidth}\n        height={canvasHeight}\n        onClick={handleCanvasClick} />\n\n      <div ref={menuRef} id=\"contextMenu\" >\n          <div className=\"contextMenu--contract\" onClick={doAddContract} >Start Contract</div>\n          { \n            clickedContract.id && \n            <div className=\"contextMenu--recon\" onClick={doAddRecon} >Add Recon</div>\n          }\n          <div className=\"contextMenu--remove\" onClick={doRemove} >Remove</div>\n      </div>\n       \n      \n      <div className=\"clearButton\" >\n        <button onClick={handleClearCanvas} > Clear Map </button>\n      </div>\n    </main>\n  );\n\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}