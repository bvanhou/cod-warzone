{"version":3,"sources":["useContracts.js","useRecon.js","map-overview-bg.jpg","App.js","reportWebVitals.js","index.js"],"names":["canvasWidth","window","innerWidth","canvasHeight","innerHeight","Contracts","props","console","log","state","isMouseInside","handleMouseEnter","bind","handleMouseLeave","coordinate","this","setContract","setState","coordinates","map","index","locationX","x","locationY","y","id","radius","fill","stroke","strokeWidth","onClick","handleClick","onMouseEnter","onMouseLeave","React","Component","Recon","api","axios","create","baseURL","process","App","menuRef","useRef","useState","setCoordinate","setCoordinates","contract","addRecon","setAddRecon","createContract","setCreateContract","removeAllCorrdinates","a","iterations","length","delete","useEffect","post","then","res","filter","type","get","_coordinates","data","className","src","warzone","alt","width","height","event","evt","position","clientX","clientY","_coordinate","_","isEmpty","parentId","location","menu","current","style","left","top","drawMenu","ref","zIndex","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2930baf3.chunk.js","sourcesContent":["import React from 'react';\nimport { Circle } from 'react-konva';\n\nconst canvasWidth = window.innerWidth;\nconst canvasHeight = window.innerHeight;\n\nexport class Contracts extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(props)\n        this.state = { \n            isMouseInside: false\n        };\n        this.handleMouseEnter = this.handleMouseEnter.bind(this);\n        this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    }\n    handleClick(coordinate) {\n        this.props.setContract(coordinate)\n    }\n    handleMouseEnter() {\n        this.setState({ isMouseInside: true});\n    }\n    handleMouseLeave() {\n        this.setState({ isMouseInside: false});\n    }\n    render() {\n        const { isMouseInside } = this.state;\n        const { coordinates } = this.props;\n        return (\n            <>\n            {\n                coordinates.map((coordinate,index)=>{\n                    let locationX = (canvasWidth * coordinate.x) / 100;\n                    let locationY = (canvasHeight * coordinate.y) / 100;\n                    return <Circle\n                        id={`contract-${index}`}\n                        x={locationX} y={locationY} radius={10}\n                        fill=\"yellow\" stroke=\"black\"\n                        strokeWidth={isMouseInside ? 3 : 1}\n                        onClick={()=>this.handleClick(coordinate)}\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                    />\n                })\n\n            }\n            </>\n        );\n    }\n}","import React from 'react';\nimport { Circle } from 'react-konva';\n\nconst canvasWidth = window.innerWidth;\nconst canvasHeight = window.innerHeight;\n\nexport class Recon extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(props)\n        this.state = { isMouseInside: false };\n        this.handleMouseEnter = this.handleMouseEnter.bind(this);\n        this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    }\n    handleClick(coordinate) {\n        console.log(coordinate)\n        console.log('clicked this recon')\n    }\n    handleMouseEnter() {\n        this.setState({ isMouseInside: true});\n    }\n    handleMouseLeave() {\n        this.setState({ isMouseInside: false});\n    }\n    render() {\n        return (\n            <>\n            {\n                \n                this.props.coordinates.map((coordinate,index)=>{\n                    let locationX = (canvasWidth * coordinate.x) / 100;\n                    let locationY = (canvasHeight * coordinate.y) / 100;\n                   return (\n                       <Circle\n                            id={`recon-${index}`}\n                            x={locationX} y={locationY} radius={10}\n                            fill=\"blue\" stroke=\"black\"\n                            strokeWidth={this.state.isMouseInside ? 3 : 1}\n                            onClick={()=>this.handleClick(coordinate)}\n                            onMouseEnter={this.handleMouseEnter}\n                            onMouseLeave={this.handleMouseLeave}\n                        />\n                    )\n                })\n            }\n                \n            </>\n        );\n    }\n}","export default __webpack_public_path__ + \"static/media/map-overview-bg.ccfc7476.jpg\";","import { useEffect, useState, useRef } from 'react';\nimport {Layer, Stage} from 'react-konva';\nimport { Contracts } from './useContracts';\nimport { Recon } from './useRecon';\n\n// import { useCanvas } from './useCanvas';\nimport axios from 'axios';\nimport _ from 'lodash';\n\nimport warzone from './map-overview-bg.jpg';\nimport './App.css';\n\nconst { REACT_APP_API_URL } = process.env;\n\nconst api = axios.create({\n  baseURL: REACT_APP_API_URL,\n});\n\n\n\nfunction App() {\n  const menuRef = useRef(null);\n\n  const [ coordinate, setCoordinate ] = useState([]);\n  const [ coordinates, setCoordinates ] = useState([]);\n\n  const [ contract, setContract ] = useState({});\n  const [ addRecon, setAddRecon ] = useState(false);\n  const [ createContract, setCreateContract ] = useState(false);\n\n  const canvasWidth = window.innerWidth;\n  const canvasHeight = window.innerHeight;\n\n  // const [ menuRef, coordinates, setCoordinates, canvasRef, canvasWidth, canvasHeight, setStart, clickedContract ] = useCanvas();\n  // const [ currentCoord, setCurrentCoord ] = useState({})\n  // const [ contractCoord, setContractCoord ] = useState({})\n  // const [ reconCoord, setReconCord ] = useState(false)\n  \n  const removeAllCorrdinates = async () => {\n    let iterations = coordinates.length;\n\n    for (const coordinate of coordinates) {\n      if(coordinate.id){\n        await api.delete(`${coordinate.id}`);\n      }\n\n      if (!--iterations)\n        setCoordinates([]);\n    }\n  }\n\n\n  const drawMenu = (location) => {\n        const menu = menuRef.current;\n        let locationX = (canvasWidth * location.x) / 100;\n        let locationY = (canvasHeight * location.y) / 100;\n        menu.style.left = `${locationX}px`;\n        menu.style.top = `${locationY}px`;\n  }\n\n\n  const handleCanvasClick = (event) => {\n    event = (event.evt) ? event.evt : event;\n\n    let position = {}\n    position.x = (100 / (canvasWidth / event.clientX));\n    position.y = 100 / (canvasHeight / event.clientY);\n    let _coordinate = {\n      x: position.x, \n      y: position.y,\n      type: null\n    };\n\n    if(addRecon && !_.isEmpty(contract) && contract.id){\n      _coordinate.type = 'recon';\n      _coordinate.parentId = contract.id;\n    }\n    if(event.createContract){\n      _coordinate.type = 'contract';\n      // create contract\n    }\n\n      // open menu\n    drawMenu(position)\n    \n    // setContract({});\n    // console.log(coordinate)\n    // console.log('click');\n    // if(coordinate.type){\n    //   console.log(coordinate)\n    // }\n\n    setCoordinate(_coordinate)\n  }\n\n  const doCreateContract = (event) =>{\n    setCreateContract(true);\n    let position = {\n      x: (100 / (canvasWidth / event.clientX)),\n      y: (100 / (canvasHeight / event.clientY)),\n      type: 'contract'\n    }\n    setCoordinate(position)\n    setContract(position)\n  }\n\n  const doAddRecon = (event) =>{\n    setAddRecon(true);\n    let position = {\n      parentId: contract.id,\n      x: (100 / (canvasWidth / event.clientX)),\n      y: (100 / (canvasHeight / event.clientY)),\n      type: 'recon'\n    }\n    setCoordinate(position)\n    setContract({})\n  };\n\n  const handleClearCanvas=(event)=>{\n    removeAllCorrdinates();\n  };\n\n  const doRemove = () =>{\n    // const _coordinates = coordinates.filter((obj) => {\n    //   return obj.x !== currentCoord.x && obj.y !== currentCoord.y\n    // })\n    // if(currentCoord.type === 'recon'){\n    //   setReconCord(false);\n    // }\n\n    // setCoordinates([...coordinates]);\n  }\n\n  useEffect(()=>{\n    console.log(coordinate);\n    api.post(\"\",{ ...coordinate })\n    .then(res => {\n      setCoordinates([...coordinates, coordinate]);\n    })\n  },[coordinates, coordinate])\n\n  useEffect(() =>{\n    console.log(contract)\n    console.log(coordinates.filter(x => x.type === 'contract' && x.id === contract.id))\n  },[contract, coordinates])\n\n  useEffect(() =>{\n    api.get()\n      .then(res => {\n        const _coordinates = res.data;\n        console.log(_coordinates)\n        setCoordinates(_coordinates);\n      })\n  },[])\n \n  return (\n    <main id=\"container\" className=\"App-main\" >\n        <img  src={warzone} className=\"img-warzone\" alt=\"logo\" />\n        <Stage \n          width={canvasWidth} \n          height={canvasHeight}\n          onClick={handleCanvasClick}\n          >\n          <Layer>\n          {\n            _.isEmpty(contract) ?\n            <Contracts coordinates={coordinates.filter(x => x.type === 'contract')} setContract={setContract}/>\n            :\n            <Contracts coordinates={coordinates.filter(x => x.type === 'contract' && x.id === contract.id)} setContract={setContract}/>\n          }\n          <Recon coordinates={coordinates.filter(x => x.type === 'recons' && x.parentId === contract.id)} />\n          </Layer>\n        </Stage>\n\n  \n      <div ref={menuRef} id=\"contextMenu\" >\n          { \n            !createContract &&\n            <div className=\"contextMenu--contract\" onClick={doCreateContract}>Create Contract</div>\n          }\n          { \n            !addRecon &&\n            <div className=\"contextMenu--recon\" onClick={doAddRecon}>Add Recon</div>\n          }\n          {\n\n            <div className=\"contextMenu--remove\" >Remove</div>\n          }\n      </div>\n\n      \n      <div className=\"clearButton\" style={{zIndex:1000}}>\n        <button onClick={removeAllCorrdinates}> Clear Map </button>\n      </div> \n    </main>\n  );\n\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}