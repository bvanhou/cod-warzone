{"version":3,"sources":["useContract.js","useRecon.js","map-overview-bg.jpg","App.js","reportWebVitals.js","index.js"],"names":["canvasWidth","window","innerWidth","canvasHeight","innerHeight","Contract","props","console","log","state","isMouseInside","coordinates","handleMouseEnter","bind","handleMouseLeave","refresh","this","fetchProductData","coordinate","setContract","setState","map","index","locationX","x","locationY","y","id","radius","fill","stroke","strokeWidth","onClick","handleClick","onMouseEnter","onMouseLeave","React","Component","Recon","api","axios","create","baseURL","process","App","menuRef","useRef","useState","setCoordinate","setCoordinates","contract","addRecon","setAddRecon","createContract","setCreateContract","removeAllCorrdinates","a","iterations","length","delete","useEffect","get","then","res","_coordinates","data","className","src","warzone","alt","width","height","event","evt","position","clientX","clientY","_coordinate","type","_","isEmpty","parentId","location","menu","current","style","left","top","drawMenu","filter","ref","zIndex","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2RAGMA,EAAcC,OAAOC,WACrBC,EAAeF,OAAOG,YAEfC,EAAb,kDACI,WAAYC,GAAQ,IAAD,6BACf,cAAMA,GACNC,QAAQC,IAAIF,GACZ,EAAKG,MAAQ,CACTC,eAAe,EACfC,YAAaL,EAAMK,aAEvBJ,QAAQC,IAAI,EAAKC,OAEjB,EAAKG,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAKE,QAAU,EAAKA,QAAQF,KAAb,gBAXA,EADvB,sDAeQG,KAAKV,MAAMW,qBAfnB,kCAmBgBC,GACRX,QAAQC,IAAIU,GACZX,QAAQC,IAAI,yBACZQ,KAAKV,MAAMa,YAAYD,KAtB/B,yCAyBQF,KAAKI,SAAS,CAAEV,eAAe,MAzBvC,yCA4BQM,KAAKI,SAAS,CAAEV,eAAe,MA5BvC,+BA8Bc,IAAD,SACkCM,KAAKP,MAApCE,EADH,EACGA,YAAaD,EADhB,EACgBA,cACrB,OACI,mCAEIC,EAAYU,KAAI,SAACH,EAAWI,GACxB,IAAIC,EAAavB,EAAckB,EAAWM,EAAK,IAC3CC,EAAatB,EAAee,EAAWQ,EAAK,IACjD,OACI,cAAC,SAAD,CACKC,GAAE,mBAAcL,GAChBE,EAAGD,EAAWG,EAAGD,EAAWG,OAAQ,GACpCC,KAAK,SAASC,OAAO,QACrBC,YAAarB,EAAgB,EAAI,EACjCsB,QAAS,kBAAI,EAAKC,YAAYf,IAC9BgB,aAAc,EAAKtB,iBACnBuB,aAAc,EAAKrB,4BA9C/C,GAA8BsB,IAAMC,WCH9BrC,EAAcC,OAAOC,WACrBC,EAAeF,OAAOG,YAEfkC,EAAb,kDACI,WAAYhC,GAAQ,IAAD,6BACf,cAAMA,GACNC,QAAQC,IAAIF,GACZ,EAAKG,MAAQ,CAAEC,eAAe,GAC9B,EAAKE,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBALT,EADvB,wDAQgBK,GACRX,QAAQC,IAAIU,GACZX,QAAQC,IAAI,wBAVpB,yCAaQQ,KAAKI,SAAS,CAAEV,eAAe,MAbvC,yCAgBQM,KAAKI,SAAS,CAAEV,eAAe,MAhBvC,+BAkBc,IAAD,OACL,OACI,mCAGIM,KAAKV,MAAMK,YAAYU,KAAI,SAACH,EAAWI,GACnC,IAAIC,EAAavB,EAAckB,EAAWM,EAAK,IAC3CC,EAAatB,EAAee,EAAWQ,EAAK,IACjD,OACI,cAAC,SAAD,CACKC,GAAE,gBAAWL,GACbE,EAAGD,EAAWG,EAAGD,EAAWG,OAAQ,GACpCC,KAAK,OAAOC,OAAO,QACnBC,YAAa,EAAKtB,MAAMC,cAAgB,EAAI,EAC5CsB,QAAS,kBAAI,EAAKC,YAAYf,IAC9BgB,aAAc,EAAKtB,iBACnBuB,aAAc,EAAKrB,4BAlC/C,GAA2BsB,IAAMC,W,kCCNlB,MAA0B,4CCcnCE,G,OAAMC,IAAMC,OAAO,CACvBC,QAH4BC,sEA6OfC,MArOf,WACE,IAAMC,EAAUC,iBAAO,MADV,EAGyBC,mBAAS,IAHlC,mBAGL7B,EAHK,KAGO8B,EAHP,OAI2BD,mBAAS,IAJpC,mBAILpC,EAJK,KAIQsC,EAJR,OAMqBF,mBAAS,IAN9B,mBAMLG,EANK,KAMK/B,EANL,OAOqB4B,oBAAS,GAP9B,mBAOLI,EAPK,KAOKC,EAPL,OAQiCL,oBAAS,GAR1C,mBAQLM,EARK,KAQWC,EARX,KAUPtD,EAAcC,OAAOC,WACrBC,EAAeF,OAAOG,YAWtBmD,EAAoB,uCAAG,kCAAAC,EAAA,sDACvBC,EAAa9C,EAAY+C,OADF,cAGF/C,GAHE,8DAGhBO,EAHgB,SAIXS,GAJW,gCAKjBY,EAAIoB,OAAJ,UAAczC,EAAWS,KALR,SAQlB8B,GACLR,EAAe,IATQ,uMAAH,qDAmK1B,OA1GAW,qBAAU,WACRrD,QAAQC,IAAIU,KAMZ,CAACA,IAuFH0C,qBAAU,WACRrD,QAAQC,IAAI0C,KACZ,CAACA,IAEHU,qBAAU,WACRrB,EAAIsB,MACDC,MAAK,SAAAC,GACJ,IAAMC,EAAeD,EAAIE,KACzBhB,EAAee,QAEnB,IAGA,uBAAMrC,GAAG,YAAYuC,UAAU,WAA/B,UACI,qBAAMC,IAAKC,EAASF,UAAU,cAAcG,IAAI,SAChD,cAAC,QAAD,CACEC,MAAOtE,EACPuE,OAAQpE,EACR6B,QAlJkB,SAACwC,GACzBA,EAASA,EAAMC,IAAOD,EAAMC,IAAMD,EAElC,IAAIE,EAAW,GACfA,EAASlD,EAAK,KAAOxB,EAAcwE,EAAMG,SACzCD,EAAShD,EAAI,KAAOvB,EAAeqE,EAAMI,SACzC,IAAIC,EAAc,CAChBrD,EAAGkD,EAASlD,EACZE,EAAGgD,EAAShD,EACZoD,KAAM,MAGL3B,IAAa4B,IAAEC,QAAQ9B,IAAaA,EAASvB,KAC9CkD,EAAYC,KAAO,QACnBD,EAAYI,SAAW/B,EAASvB,IAE/B6C,EAAMnB,iBACPwB,EAAYC,KAAO,YA1BN,SAACI,GACZ,IAAMC,EAAOtC,EAAQuC,QACjB7D,EAAavB,EAAckF,EAAS1D,EAAK,IACzCC,EAAatB,EAAe+E,EAASxD,EAAK,IAC9CyD,EAAKE,MAAMC,KAAX,UAAqB/D,EAArB,MACA4D,EAAKE,MAAME,IAAX,UAAoB9D,EAApB,MA0BJ+D,CAASd,GAST1B,EAAc6B,IAgHV,SAKE,eAAC,QAAD,WAEEE,IAAEC,QAAQ9B,GACV,cAAC,EAAD,CAAUvC,YAAaA,EAAY8E,QAAO,SAAAjE,GAAC,MAAe,aAAXA,EAAEsD,QAAsB3D,YAAaA,IAEpF,cAAC,EAAD,CAAUR,YAAaA,EAAY8E,QAAO,SAAAjE,GAAC,MAAe,aAAXA,EAAEsD,MAAuBtD,EAAEG,KAAOuB,EAASvB,MAAKR,YAAaA,IAE9G,cAAC,EAAD,CAAOR,YAAaA,EAAY8E,QAAO,SAAAjE,GAAC,MAAe,WAAXA,EAAEsD,MAAqBtD,EAAEyD,WAAa/B,EAASvB,aAK/F,sBAAK+D,IAAK7C,EAASlB,GAAG,cAAtB,WAEO0B,GACD,qBAAKa,UAAU,wBAAwBlC,QAvHxB,SAACwC,GACxBlB,GAAkB,GAClB,IAAIoB,EAAW,CACblD,EAAI,KAAOxB,EAAcwE,EAAMG,SAC/BjD,EAAI,KAAOvB,EAAeqE,EAAMI,SAChCE,KAAM,YAER9B,EAAc0B,GACdvD,EAAYuD,IA+GJ,8BAGCvB,GACD,qBAAKe,UAAU,qBAAqBlC,QAhH3B,SAACwC,GAClBpB,GAAY,GACZ,IAAIsB,EAAW,CACbO,SAAU/B,EAASvB,GACnBH,EAAI,KAAOxB,EAAcwE,EAAMG,SAC/BjD,EAAI,KAAOvB,EAAeqE,EAAMI,SAChCE,KAAM,SAER9B,EAAc0B,GACdvD,EAAY,KAuGJ,uBAIA,qBAAK+C,UAAU,sBAAf,uBAKN,qBAAKA,UAAU,cAAcmB,MAAO,CAACM,OAAO,KAA5C,SACE,wBAAQ3D,QAASuB,EAAjB,+BCtOOqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BX,K","file":"static/js/main.8ae33361.chunk.js","sourcesContent":["import React from 'react';\nimport { Circle } from 'react-konva';\n\nconst canvasWidth = window.innerWidth;\nconst canvasHeight = window.innerHeight;\n\nexport class Contract extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(props)\n        this.state = { \n            isMouseInside: false, \n            coordinates: props.coordinates \n        };\n        console.log(this.state)\n\n        this.handleMouseEnter = this.handleMouseEnter.bind(this);\n        this.handleMouseLeave = this.handleMouseLeave.bind(this);\n        this.refresh = this.refresh.bind(this)\n    }\n    refresh () {\n        this.props.fetchProductData()\n      }\n\n      \n    handleClick(coordinate) {\n        console.log(coordinate)\n        console.log('clicked this contract')\n        this.props.setContract(coordinate)\n    }\n    handleMouseEnter() {\n        this.setState({ isMouseInside: true});\n    }\n    handleMouseLeave() {\n        this.setState({ isMouseInside: false});\n    }\n    render() {\n        const { coordinates, isMouseInside } = this.state\n        return (\n            <>\n            {\n                coordinates.map((coordinate,index)=>{\n                    let locationX = (canvasWidth * coordinate.x) / 100;\n                    let locationY = (canvasHeight * coordinate.y) / 100;\n                   return (\n                       <Circle\n                            id={`contract-${index}`}\n                            x={locationX} y={locationY} radius={10}\n                            fill=\"yellow\" stroke=\"black\"\n                            strokeWidth={isMouseInside ? 3 : 1}\n                            onClick={()=>this.handleClick(coordinate)}\n                            onMouseEnter={this.handleMouseEnter}\n                            onMouseLeave={this.handleMouseLeave}\n                        />\n                    )\n                })\n            }\n                \n            </>\n        );\n    }\n}","import React from 'react';\nimport { Circle } from 'react-konva';\n\nconst canvasWidth = window.innerWidth;\nconst canvasHeight = window.innerHeight;\n\nexport class Recon extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(props)\n        this.state = { isMouseInside: false };\n        this.handleMouseEnter = this.handleMouseEnter.bind(this);\n        this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    }\n    handleClick(coordinate) {\n        console.log(coordinate)\n        console.log('clicked this recon')\n    }\n    handleMouseEnter() {\n        this.setState({ isMouseInside: true});\n    }\n    handleMouseLeave() {\n        this.setState({ isMouseInside: false});\n    }\n    render() {\n        return (\n            <>\n            {\n                \n                this.props.coordinates.map((coordinate,index)=>{\n                    let locationX = (canvasWidth * coordinate.x) / 100;\n                    let locationY = (canvasHeight * coordinate.y) / 100;\n                   return (\n                       <Circle\n                            id={`recon-${index}`}\n                            x={locationX} y={locationY} radius={10}\n                            fill=\"blue\" stroke=\"black\"\n                            strokeWidth={this.state.isMouseInside ? 3 : 1}\n                            onClick={()=>this.handleClick(coordinate)}\n                            onMouseEnter={this.handleMouseEnter}\n                            onMouseLeave={this.handleMouseLeave}\n                        />\n                    )\n                })\n            }\n                \n            </>\n        );\n    }\n}","export default __webpack_public_path__ + \"static/media/map-overview-bg.ccfc7476.jpg\";","import { useEffect, useState, useRef } from 'react';\nimport {Layer, Stage} from 'react-konva';\nimport { Contract } from './useContract';\nimport { Recon } from './useRecon';\n\n// import { useCanvas } from './useCanvas';\nimport axios from 'axios';\nimport _ from 'lodash';\n\nimport warzone from './map-overview-bg.jpg';\nimport './App.css';\n\nconst { REACT_APP_API_URL } = process.env;\n\nconst api = axios.create({\n  baseURL: REACT_APP_API_URL,\n});\n\n\n\nfunction App() {\n  const menuRef = useRef(null);\n\n  const [ coordinate, setCoordinate ] = useState([]);\n  const [ coordinates, setCoordinates ] = useState([]);\n\n  const [ contract, setContract ] = useState({});\n  const [ addRecon, setAddRecon ] = useState(false);\n  const [ createContract, setCreateContract ] = useState(false);\n\n  const canvasWidth = window.innerWidth;\n  const canvasHeight = window.innerHeight;\n\n  // const [ menuRef, coordinates, setCoordinates, canvasRef, canvasWidth, canvasHeight, setStart, clickedContract ] = useCanvas();\n  // const [ currentCoord, setCurrentCoord ] = useState({})\n  // const [ contractCoord, setContractCoord ] = useState({})\n  // const [ reconCoord, setReconCord ] = useState(false)\n\n  // window.addEventListener('contextmenu', function (e) { \n  //   e.preventDefault(); \n  // }, false);\n  \n  const removeAllCorrdinates = async () => {\n    let iterations = coordinates.length;\n\n    for (const coordinate of coordinates) {\n      if(coordinate.id){\n        await api.delete(`${coordinate.id}`);\n      }\n\n      if (!--iterations)\n        setCoordinates([]);\n    }\n  }\n\n\n  const drawMenu = (location) => {\n        const menu = menuRef.current;\n        let locationX = (canvasWidth * location.x) / 100;\n        let locationY = (canvasHeight * location.y) / 100;\n        menu.style.left = `${locationX}px`;\n        menu.style.top = `${locationY}px`;\n  }\n\n\n  const handleCanvasClick = (event) => {\n    event = (event.evt) ? event.evt : event;\n\n    let position = {}\n    position.x = (100 / (canvasWidth / event.clientX));\n    position.y = 100 / (canvasHeight / event.clientY);\n    let _coordinate = {\n      x: position.x, \n      y: position.y,\n      type: null\n    };\n\n    if(addRecon && !_.isEmpty(contract) && contract.id){\n      _coordinate.type = 'recon';\n      _coordinate.parentId = contract.id;\n    }\n    if(event.createContract){\n      _coordinate.type = 'contract';\n      // create contract\n    }\n\n      // open menu\n    drawMenu(position)\n    \n    // setContract({});\n    // console.log(coordinate)\n    // console.log('click');\n    // if(coordinate.type){\n    //   console.log(coordinate)\n    // }\n\n    setCoordinate(_coordinate)\n  }\n\n  useEffect(()=>{\n    console.log(coordinate);\n    // api.post(\"\",{ ...coordinate })\n    // .then(res => {\n    //   setContract(res.data)\n    //   setCoordinates([...coordinates, res.data]);\n    // })\n  },[coordinate])\n\n\n  const doCreateContract = (event) =>{\n    setCreateContract(true);\n    let position = {\n      x: (100 / (canvasWidth / event.clientX)),\n      y: (100 / (canvasHeight / event.clientY)),\n      type: 'contract'\n    }\n    setCoordinate(position)\n    setContract(position)\n  }\n\n  const doAddRecon = (event) =>{\n    setAddRecon(true);\n    let position = {\n      parentId: contract.id,\n      x: (100 / (canvasWidth / event.clientX)),\n      y: (100 / (canvasHeight / event.clientY)),\n      type: 'recon'\n    }\n    setCoordinate(position)\n    setContract({})\n  };\n\n\n  //   // Object.assign(_currentCoord,\n  //   //   (reconCoord) ? { type: 'recon'} : null);\n\n  //   //   // api.post(\"\",{ ..._currentCoord })\n  //   //   // .then(res => {\n  //   //   //   setContractCoord(res.data)\n  //   //   //   setCoordinates([...coordinates, res.data]);\n  //   //   // })\n\n  //   // if(reconCoord) setReconCord(false);\n\n  //   // setCurrentCoord(_currentCoord);\n  //   // setCoordinates([...coordinates, _currentCoord]);\n  //   // console.log(_currentCoord)\n\n  // };\n  const handleClearCanvas=(event)=>{\n    removeAllCorrdinates();\n  };\n\n\n\n  // }\n  // const doAddRecon = () =>{\n  //   setReconCord(true)\n  //   // const { x, y } = currentCoord;\n  //   // const _currentCoord = { parentId: clickedContract.id,  x, y, type: 'recon' };\n\n  //   // const canvasObj = canvasRef.current;\n  //   // const ctx = canvasObj.getContext('2d');\n\n  //   // ctx.canvas.addEventListener('mousemove', e => {\n  //   //   ctx.save();\n  //   //   ctx.clearRect(0, 0, canvasWidth, canvasHeight)\n\n  //   //   // Get the local x/y coordinates of the mouse on the canvas\n  //   //   let x = e.clientX;\n  //   //   let y = e.clientY;\n  //   //   // Draw a dot where the mouse is\n  //   //   ctx.beginPath();\n  //   //   ctx.arc(x, y, 10, 0, 2 * Math.PI, false);\n  //   //   ctx.fillStyle = 'white';\n  //   //   ctx.fill();\n  //   //   ctx.save();\n  //   //   ctx.restore();\n  //   // })\n    \n  //   // console.log(_currentCoord)\n  //   // setCoordinates([...coordinates, _currentCoord]);\n  // }\n  // const doRemove = () =>{\n  //   const _coordinates = coordinates.filter((obj) => {\n  //     return obj.x !== currentCoord.x && obj.y !== currentCoord.y\n  //   })\n  //   if(currentCoord.type === 'recon'){\n  //     setReconCord(false);\n  //   }\n\n  //   setCoordinates([..._coordinates]);\n  // }\n  useEffect(() =>{\n    console.log(contract)\n  },[contract])\n\n  useEffect(() =>{\n    api.get()\n      .then(res => {\n        const _coordinates = res.data;\n        setCoordinates(_coordinates);\n      })\n  },[])\n \n  return (\n    <main id=\"container\" className=\"App-main\" >\n        <img  src={warzone} className=\"img-warzone\" alt=\"logo\" />\n        <Stage \n          width={canvasWidth} \n          height={canvasHeight}\n          onClick={handleCanvasClick}\n          >\n          <Layer>\n          {\n            _.isEmpty(contract) ?\n            <Contract coordinates={coordinates.filter(x => x.type === 'contract')} setContract={setContract}/>\n            :\n            <Contract coordinates={coordinates.filter(x => x.type === 'contract' && x.id === contract.id)} setContract={setContract}/>\n          }\n          <Recon coordinates={coordinates.filter(x => x.type === 'recons' && x.parentId === contract.id)} />\n          </Layer>\n        </Stage>\n\n  \n      <div ref={menuRef} id=\"contextMenu\" >\n          { \n            !createContract &&\n            <div className=\"contextMenu--contract\" onClick={doCreateContract}>Create Contract</div>\n          }\n          { \n            !addRecon &&\n            <div className=\"contextMenu--recon\" onClick={doAddRecon}>Add Recon</div>\n          }\n          {\n\n            <div className=\"contextMenu--remove\" >Remove</div>\n          }\n      </div>\n\n      \n      <div className=\"clearButton\" style={{zIndex:1000}}>\n        <button onClick={removeAllCorrdinates}> Clear Map </button>\n      </div> \n    </main>\n  );\n\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}