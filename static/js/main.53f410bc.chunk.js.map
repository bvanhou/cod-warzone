{"version":3,"sources":["components/useBackgroundImage.js","components/useContracts.js","components/useRecons.js","map-overview-bg.jpg","App.js","reportWebVitals.js","index.js"],"names":["BackgroundImage","props","handleLoad","setState","image","state","handleMouseWheel","bind","this","loadImage","oldProps","src","removeEventListener","window","Image","addEventListener","console","log","x","y","width","height","onWheel","ref","node","imageNode","React","Component","canvasWidth","innerWidth","canvasHeight","innerHeight","Contracts","isMouseInside","handleMouseEnter","handleMouseLeave","coordinate","setContract","coordinates","map","index","locationX","locationY","id","radius","fill","stroke","strokeWidth","onClick","handleClick","onMouseEnter","onMouseLeave","Recons","setRecon","api","axios","create","baseURL","process","App","menuRef","useRef","useState","setCoordinate","setCoordinates","contract","recon","cover","drawMenu","visibility","location","menu","current","style","left","top","doRemove","a","_coordinates","filter","obj","removeAllCorrdinates","iterations","length","delete","useEffect","get","then","res","data","className","event","evt","position","clientX","clientY","warzone","alt","_","isEmpty","type","parentId","post","zIndex","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53f410bc.chunk.js","sourcesContent":["import React from 'react';\nimport { Image } from 'react-konva';\n\n\n// custom component that will handle loading image from url\n// you may add more logic here to handle \"loading\" state\n// or if loading is failed\n// VERY IMPORTANT NOTES:\n// at first we will set image state to null\n// and then we will set it to native image instance when it is loaded\nexport class BackgroundImage extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      image: null\n    };\n    this.handleMouseWheel = this.handleMouseWheel.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadImage();\n  }\n  componentDidUpdate(oldProps) {\n    if (oldProps.src !== this.props.src) {\n      this.loadImage();\n    }\n  }\n  componentWillUnmount() {\n    this.image.removeEventListener('load', this.handleLoad);\n  }\n  loadImage() {\n    // save to \"this\" to remove \"load\" handler on unmount\n    this.image = new window.Image();\n    this.image.src = this.props.src;\n    this.image.addEventListener('load', this.handleLoad);\n    console.log(this.image)\n  }\n  handleLoad = () => {\n    // after setState react-konva will update canvas and redraw the layer\n    // because \"image\" property is changed\n    this.setState({\n      image: this.image\n    });\n    // if you keep same image object during source updates\n    // you will have to update layer manually:\n    // this.imageNode.getLayer().batchDraw();\n  };\n  handleMouseWheel() {\n    console.log('wheel')\n  }\n\n  render() {\n    return (\n      <Image\n        x={this.props.x}\n        y={this.props.y}\n        width={this.props.width}\n        height={this.props.height}\n        image={this.state.image}\n        onWheel={this.handleMouseWheel}\n        ref={node => {\n          this.imageNode = node;\n        }}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { Circle } from 'react-konva';\n\nconst canvasWidth = window.innerWidth;\nconst canvasHeight = window.innerHeight;\n\nexport class Contracts extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            isMouseInside: false\n        };\n        this.handleMouseEnter = this.handleMouseEnter.bind(this);\n        this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    }\n    handleClick(coordinate) {\n        this.props.setContract(coordinate)\n    }\n    handleMouseEnter() {\n        this.setState({ isMouseInside: true});\n    }\n    handleMouseLeave() {\n        this.setState({ isMouseInside: false});\n    }\n    render() {\n        const { isMouseInside } = this.state\n        const { coordinates } = this.props\n            return (\n                <>\n                {\n                    coordinates.map((coordinate,index)=>{\n                        let locationX = (canvasWidth * coordinate.x) / 100;\n                        let locationY = (canvasHeight * coordinate.y) / 100;\n                        return <Circle\n                                id={`contract-${index}`}\n                                x={locationX} y={locationY} radius={5}\n                                fill=\"yellow\" stroke=\"black\"\n                                strokeWidth={1}\n                                onClick={()=>this.handleClick(coordinate)}\n                                onMouseEnter={this.handleMouseEnter}\n                                onMouseLeave={this.handleMouseLeave}\n                            />\n                    })\n\n                }\n                </>\n            );\n\n\n    }\n}","import React from 'react';\nimport { Circle } from 'react-konva';\n\nconst canvasWidth = window.innerWidth;\nconst canvasHeight = window.innerHeight;\n\nexport class Recons extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { isMouseInside: false };\n        this.handleMouseEnter = this.handleMouseEnter.bind(this);\n        this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    }\n    handleClick(coordinate) {\n        this.props.setRecon(coordinate)\n    }\n    handleMouseEnter() {\n        this.setState({ isMouseInside: true});\n    }\n    handleMouseLeave() {\n        this.setState({ isMouseInside: false});\n    }\n    render() {\n        return (\n            <>\n            {\n                \n                this.props.coordinates.map((coordinate,index)=>{\n                    let locationX = (canvasWidth * coordinate.x) / 100;\n                    let locationY = (canvasHeight * coordinate.y) / 100;\n                   return (\n                       <Circle\n                            id={`recon-${index}`}\n                            x={locationX} y={locationY} radius={5}\n                            fill=\"blue\" stroke=\"black\"\n                            strokeWidth={1}\n                            onClick={()=>this.handleClick(coordinate)}\n                            onMouseEnter={this.handleMouseEnter}\n                            onMouseLeave={this.handleMouseLeave}\n                        />\n                    )\n                })\n            }\n                \n            </>\n        );\n    }\n}","export default __webpack_public_path__ + \"static/media/map-overview-bg.ccfc7476.jpg\";","import { useEffect, useState, useRef } from 'react';\nimport {Layer, Stage} from 'react-konva';\nimport {cover} from 'intrinsic-scale';\n\nimport { BackgroundImage } from './components/useBackgroundImage';\nimport { Contracts } from './components/useContracts';\nimport { Recons } from './components/useRecons';\n\nimport axios from 'axios';\nimport _ from 'lodash';\n\nimport warzone from './map-overview-bg.jpg';\nimport './App.css';\n\nconst { REACT_APP_API_URL } = process.env;\n\nconst api = axios.create({\n  baseURL: REACT_APP_API_URL,\n});\n\n\n\n\nfunction App() {\n  const menuRef = useRef(null);\n  const imageRef = useRef(null);\n\n  const [ coordinate, setCoordinate ] = useState([]);\n  const [ coordinates, setCoordinates ] = useState([]);\n\n  const [ contract, setContract ] = useState({});\n  const [ recon, setRecon ] = useState({});\n\n  const [ addRecon, setAddRecon ] = useState(true);\n\n  const canvasWidth = window.innerWidth;\n  const canvasHeight = window.innerHeight;\n  const { width, height, x, y } = cover(canvasWidth, canvasHeight, 1920, 1080);\n  \n  const ScrollZoom = (container,max_scale,factor) =>{\n    let target = container.current;  \n    // var target = container.children().first()\n    let size = {w:canvasWidth,h:canvasHeight}\n    console.log(size);\n    let pos = {x:0,y:0}\n    let zoom_target = {x:0,y:0}\n    let zoom_point = {x:0,y:0}\n    let scale = 1\n    target.style.transformOrigin = \"0 0\";\n    // target.css('transform-origin','0 0')\n    if (target.addEventListener) {\n      // IE9, Chrome, Safari, Opera\n      target.addEventListener(\"mousewheel\", scrolled, false);\n      // Firefox\n      target.addEventListener(\"DOMMouseScroll\", scrolled, false);\n    }\n    else target.attachEvent(\"onmousewheel\", scrolled);\n\n    function scrolled(e){\n       console.log(e)\n        var offset = container.offset()\n        zoom_point.x = e.pageX - offset.left\n        zoom_point.y = e.pageY - offset.top\n  \n        e.preventDefault();\n        var delta = e.delta || e.originalEvent.wheelDelta;\n        if (delta === undefined) {\n          //we are on firefox\n          delta = e.originalEvent.detail;\n        }\n        delta = Math.max(-1,Math.min(1,delta)) // cap the delta to [-1,1] for cross browser consistency\n  \n        // determine the point on where the slide is zoomed in\n        zoom_target.x = (zoom_point.x - pos.x)/scale\n        zoom_target.y = (zoom_point.y - pos.y)/scale\n  \n        // apply zoom\n        scale += delta*factor * scale\n        scale = Math.max(1,Math.min(max_scale,scale))\n  \n        // calculate x and y based on zoom\n        pos.x = -zoom_target.x * scale + zoom_point.x\n        pos.y = -zoom_target.y * scale + zoom_point.y\n  \n  \n        // Make sure the slide stays in its container area when zooming out\n        if(pos.x>0)\n            pos.x = 0\n        if(pos.x+size.w*scale<size.w)\n            pos.x = -size.w*(scale-1)\n        if(pos.y>0)\n            pos.y = 0\n         if(pos.y+size.h*scale<size.h)\n            pos.y = -size.h*(scale-1)\n  \n        update()\n    }\n  \n    function update(){\n        target.css('transform','translate('+(pos.x)+'px,'+(pos.y)+'px) scale('+scale+','+scale+')')\n    }\n  }\n\n  const drawMenu = (visibility, location) => {\n    console.log(`Show Menu: ${ visibility }`);\n    let locationX = ((canvasWidth * location.x) / 100) + 10;\n    let locationY = ((canvasHeight * location.y) / 100) + 10;\n\n    const menu = menuRef.current;\n    menu.style.visibility = (visibility) ? \"visible\": \"hidden\";\n    menu.style.left = `${locationX}px`;\n    menu.style.top = `${locationY}px`;\n  }\n\n  const handleCanvasClick = (event) => {\n    event = (event.evt) ? event.evt : event;\n    let position = {\n      x: (100 / (canvasWidth / event.clientX)),\n      y: (100 / (canvasHeight / event.clientY))\n    }\n    console.log('clicking')\n    drawMenu(true, position)\n    setCoordinate(position);\n\n  }\n\n  const doCreateContract = () =>{\n    coordinate.type = 'contract';\n    api.post(\"\",{ ...coordinate })\n    .then(res => {\n      setCoordinate(res.data)\n      setContract(res.data)\n      setCoordinates([...coordinates, res.data]);\n    })\n  }\n\n  const doAddRecon = (event) =>{\n    coordinate.parentId = contract.id;\n    coordinate.type = 'recon';\n    api.post(\"\",{ ...coordinate })\n    .then(res => {\n      setCoordinate(res.data)\n      setContract({})\n      setCoordinates([...coordinates, res.data]);\n    })\n  };\n\n  const doRemove = async () =>{\n    const _coordinates = coordinates.filter((obj) => {\n      return obj.x !== coordinate.x && obj.y !== coordinate.y\n    });\n    console.log(_coordinates)\n    // await api.delete(`${_coordinates.id}`);\n    // if(currentCoord.type === 'recon'){\n    //   setReconCord(false);\n    // }\n\n    // setCoordinates([...coordinates]);\n  }\n\n  const removeAllCorrdinates = async () => {\n    let iterations = coordinates.length;\n\n    for (const coordinate of coordinates) {\n      if(coordinate.id){\n        await api.delete(`${coordinate.id}`);\n      }\n\n      if (!--iterations)\n        setCoordinates([]);\n    }\n  }\n\n  const doReset = () =>{\n    setContract({})\n    setCoordinate({})\n    drawMenu(false, {})\n  }\n\n  useEffect(() =>{\n    api.get()\n      .then(res => {\n        console.log(res.data)\n        setCoordinates(res.data);\n    });\n  },[])\n \n  return (\n    <main id=\"container\" className=\"App-main\" >\n        <Stage \n          width={canvasWidth} \n          height={canvasHeight}\n          onClick={handleCanvasClick}\n          >\n          <Layer>\n          <BackgroundImage src={warzone} alt=\"logo\" x={x} y={y} width={width} height={height} />\n          {\n            _.isEmpty(contract) ?\n            <Contracts coordinates={coordinates.filter(x => x.type === 'contract')} setContract={setContract}/>\n            :\n            <Contracts coordinates={coordinates.filter(x => x.type === 'contract')} setContract={setContract}/>\n          }\n            <Recons coordinates={coordinates.filter(x => x.type === 'recon' && x.parentId === contract.id)}  setRecon={setRecon}/>\n          </Layer>\n        </Stage>\n\n  \n      <div ref={menuRef} id=\"contextMenu\" >\n          { \n            _.isEmpty(contract) &&\n            <div className=\"contextMenu--contract\" onClick={doCreateContract}>Create Contract</div>\n          }\n          { \n            !_.isEmpty(contract) &&\n            <div className=\"contextMenu--recon\" onClick={doAddRecon}>Add Recon</div>\n          }\n          {\n            (!_.isEmpty(contract) || !_.isEmpty(recon)) &&\n            <div className=\"contextMenu--remove\" onClick={doRemove} >Remove</div>\n          }\n          {\n            <div className=\"contextMenu--cancel\" onClick={doReset} >Cancel</div>\n          }\n\n      </div>\n\n      \n      <div className=\"clearButton\" style={{zIndex:1000}}>\n        <button onClick={removeAllCorrdinates}> Clear Map </button>\n      </div> \n    </main>\n  );\n\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}