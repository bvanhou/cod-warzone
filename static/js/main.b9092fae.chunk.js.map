{"version":3,"sources":["useCanvas.js","map-overview-bg.jpg","App.js","reportWebVitals.js","index.js"],"names":["SVG_PATH","Path2D","SCALE","canvasWidth","window","innerWidth","canvasHeight","innerHeight","useCanvas","canvasRef","useRef","menuRef","useState","coordinates","setCoordinates","clickedCoordinate","setClickedCoordinate","start","setStart","useEffect","console","log","ctx","current","getContext","menu","_corrdinate","length","undefined","type","location","locationX","x","locationY","y","style","left","top","drawMenu","clearRect","forEach","coordinate","fillStyle","shadowColor","shadowBlur","save","scale","translate","rotate","Math","PI","fill","canvas","addEventListener","event","screenPercentX","clientX","screenPercentY","clientY","_currentCoord","clickedContract","reduce","a","b","abs","restore","draw","api","axios","create","baseURL","process","App","currentCoord","setCurrentCoord","contractCoord","setContractCoord","e","preventDefault","get","then","res","_coordinates","data","id","className","src","warzone","alt","ref","width","height","onClick","parentId","offsetLeft","offsetTop","beginPath","arc","filter","obj","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9092fae.chunk.js","sourcesContent":["import { useState, useEffect, useRef } from 'react';\n\n// Path2D for a Heart SVG\nconst heartSVG = \"M0 200 v-200 h200 a100,100 90 0,1 0,200 a100,100 90 0,1 -200,0 z\"\nconst SVG_PATH = new Path2D(heartSVG);\n\n// Scaling Constants for Canvas\nconst SCALE = 0.05;\nconst OFFSET = 80;\nexport const canvasWidth = window.innerWidth;\nexport const canvasHeight = window.innerHeight;\n\nexport function draw(ctx, location, coordinates, setClickedCoordinate){\n    if(location.type){\n        let locationX = (canvasWidth * location.x) / 100;\n        let locationY = (canvasHeight * location.y) / 100;\n        ctx.fillStyle = location.type === 'contract' ? 'red': 'blue';\n        ctx.shadowColor = 'blue';\n        ctx.shadowBlur = 15;\n        ctx.save();\n        ctx.scale(SCALE, SCALE);\n        ctx.translate(locationX / SCALE - OFFSET, locationY / SCALE - OFFSET);\n        ctx.rotate(225 * Math.PI / 180);\n        ctx.fill(SVG_PATH);\n\n        ctx.canvas.addEventListener('click',(event)=> {\n            let screenPercentX = 100 / (canvasWidth / event.clientX);\n            let screenPercentY = 100 / (canvasHeight / event.clientY);\n            let _currentCoord  = { x: screenPercentX, y: screenPercentY };\n            let clickedContract = coordinates.reduce((a, b) => {\n                return (\n                    Math.abs(b.x - _currentCoord.x) < Math.abs(a.x - _currentCoord.x) \n                    &&\n                    Math.abs(b.y - _currentCoord.y) < Math.abs(a.y - _currentCoord.y) \n                ) ? b : a;\n            })\n            console.log('click on Contract')\n            setClickedCoordinate(clickedContract)\n        });\n        // .restore(): Canvas 2D API restores the most recently saved canvas state\n        ctx.restore();  \n    }\n};\n\nexport const drawMenu = (menu, location) =>{\n    if(location){\n        let locationX = (canvasWidth * location.x) / 100;\n        let locationY = (canvasHeight * location.y) / 100;\n        menu.style.left = `${locationX}px`;\n        menu.style.top = `${locationY}px`;\n    }\n}\n\nexport function useCanvas(){\n    const canvasRef = useRef(null);\n    const menuRef = useRef(null);\n\n    const [coordinates, setCoordinates] = useState([]);\n    const [clickedCoordinate, setClickedCoordinate] = useState(null);\n\n    const [start, setStart] = useState(false);\n\n    useEffect(()=>{\n        console.log(clickedCoordinate)\n    },[clickedCoordinate])\n    useEffect(()=>{\n        const canvasObj = canvasRef.current;\n        const ctx = canvasObj.getContext('2d');\n        const menu = menuRef.current;\n        const _corrdinate = coordinates.length-1;\n        // Draw Context Menu \n        if(!start && _corrdinate.type === undefined)    \n            drawMenu(menu, coordinates[coordinates.length-1]);\n        // clear the canvas area before rendering the coordinates held in state\n        ctx.clearRect( 0,0, canvasWidth, canvasHeight );\n        // draw all coordinates held in state\n        coordinates.forEach((coordinate)=>{\n            draw(ctx, coordinate, coordinates, setClickedCoordinate)\n        });\n\n\n    });\n\n\n    return [ menuRef, coordinates, setCoordinates, canvasRef, canvasWidth, canvasHeight, setStart, clickedCoordinate ];\n}\n","export default __webpack_public_path__ + \"static/media/map-overview-bg.ccfc7476.jpg\";","import { useEffect, useState } from 'react';\nimport { useCanvas } from './useCanvas';\nimport axios from 'axios';\n\nimport warzone from './map-overview-bg.jpg';\nimport './App.css';\n\nconst { REACT_APP_API_URL } = process.env;\n\nconst api = axios.create({\n  baseURL: REACT_APP_API_URL,\n});\n\n\nfunction App() {\n  const [ menuRef, coordinates, setCoordinates, canvasRef, canvasWidth, canvasHeight, setStart, clickedCoordinate ] = useCanvas();\n  const [ currentCoord, setCurrentCoord ] = useState({})\n  const [ contractCoord, setContractCoord ] = useState({})\n\n  window.addEventListener('contextmenu', function (e) { \n    e.preventDefault(); \n  }, false);\n  \n  const handleCanvasClick=(event)=>{\n    setStart(false)\n    let screenPercentX = 100 / (canvasWidth / event.clientX);\n    let screenPercentY = 100 / (canvasHeight / event.clientY);\n    let _currentCoord  = { x: screenPercentX, y: screenPercentY };\n    setCurrentCoord(_currentCoord);\n    setCoordinates([...coordinates, _currentCoord]);\n  };\n  const handleClearCanvas=(event)=>{\n    setCoordinates([]);\n  };\n\n  const doAddContract = (event) =>{\n    let screenPercentX = 100 / (canvasWidth / event.clientX);\n    let screenPercentY = 100 / (canvasHeight / event.clientY);\n    let _currentCoord  = { parentId: null, x: screenPercentX, y: screenPercentY, type: 'contract' };\n    // add the newest mouse location to an array in state \n    // api.post(\"\",{ ..._currentCoord })\n    // .then(res => {\n      setContractCoord(_currentCoord)\n      setCoordinates([...coordinates, _currentCoord]);\n    // })\n\n  }\n  const doAddRecon = () =>{\n    const { x, y } = currentCoord;\n    const _currentCoord = { parentId: clickedCoordinate.id,  x, y, type: 'recon' };\n\n    const canvasObj = canvasRef.current;\n    const ctx = canvasObj.getContext('2d');\n\n    ctx.canvas.addEventListener('mousemove', e => {\n      ctx.clearRect(0, 0, ctx.width, ctx.height)\n    \n      // Get the local x/y coordinates of the mouse on the canvas\n      let x = e.clientX - ctx.offsetLeft\n      let y = e.clientY - ctx.offsetTop\n    \n      // Draw a dot where the mouse is\n      ctx.beginPath();\n      ctx.arc(x, y, 10, 0, 2 * Math.PI, false);\n      ctx.fillStyle = 'white';\n      ctx.fill();\n    })\n    \n    console.log(_currentCoord)\n    setCoordinates([...coordinates, _currentCoord]);\n  }\n  const doRemove = () =>{\n    const _coordinates = coordinates.filter((obj) => {\n      return obj.x !== currentCoord.x && obj.y !== currentCoord.y\n    })\n    setCoordinates([..._coordinates]);\n  }\n\n  useEffect(() =>{\n    api.get()\n      .then(res => {\n        const _coordinates = res.data;\n        setStart(true)\n        setCoordinates(_coordinates);\n      })\n  },[setCoordinates, setStart])\n\n  useEffect(() =>{\n    console.log(contractCoord)\n  },[contractCoord])\n \n  return (\n    <main id=\"container\" className=\"App-main\" >\n      <img  src={warzone} className=\"img-warzone\" alt=\"logo\" />\n  \n      <canvas \n        className=\"App-canvas\"\n        ref={canvasRef}\n        width={canvasWidth}\n        height={canvasHeight}\n        onClick={handleCanvasClick} />\n\n      <div ref={menuRef} id=\"contextMenu\" >\n          <div className=\"contextMenu--contract\" onClick={doAddContract} >Start Contract</div>\n          { \n            clickedCoordinate.id && \n            <div className=\"contextMenu--recon\" onClick={doAddRecon} >Add Recon</div>\n          }\n          <div className=\"contextMenu--remove\" onClick={doRemove} >Remove</div>\n      </div>\n       \n      \n      <div className=\"clearButton\" >\n        <button onClick={handleClearCanvas} > Clear Map </button>\n      </div>\n    </main>\n  );\n\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}